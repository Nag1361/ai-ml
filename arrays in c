#include <stdio.h>

#define MAX_SIZE 100

// Function to read an array
void readArray(int arr[], int *size) {
    printf("Enter the number of elements: ");
    scanf("%d", size);

    printf("Enter the elements:\n");
    for (int i = 0; i < *size; i++) {
        scanf("%d", &arr[i]);
    }
}

// Function to print an array
void printArray(int arr[], int size) {
    printf("Array elements are:\n");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

// Function to print all negative elements in an array
void printNegativeElements(int arr[], int size) {
    printf("Negative elements are:\n");
    int hasNegative = 0;
    for (int i = 0; i < size; i++) {
        if (arr[i] < 0) {
            printf("%d ", arr[i]);
            hasNegative = 1;
        }
    }
    if (!hasNegative) {
        printf("None\n");
    } else {
        printf("\n");
    }
}

// Function to find the second largest number in an array
void findSecondLargest(int arr[], int size) {
    if (size < 2) {
        printf("Array should have at least two elements.\n");
        return;
    }

    int first = arr[0];
    int second = arr[1];

    if (second > first) {
        int temp = first;
        first = second;
        second = temp;
    }

    for (int i = 2; i < size; i++) {
        if (arr[i] > first) {
            second = first;
            first = arr[i];
        } else if (arr[i] > second && arr[i] < first) {
            second = arr[i];
        }
    }

    if (second == first) {
        printf("No second largest element found.\n");
    } else {
        printf("The second largest element is %d\n", second);
    }
}

// Function to delete all duplicate elements from an array
void deleteDuplicates(int arr[], int *size) {
    for (int i = 0; i < *size; i++) {
        for (int j = i + 1; j < *size; j++) {
            if (arr[i] == arr[j]) {
                // Shift all elements to the left
                for (int k = j; k < *size - 1; k++) {
                    arr[k] = arr[k + 1];
                }
                (*size)--; // Reduce the size
                j--; // Check the new element at the current position
            }
        }
    }
}

int main() {
    int arr[MAX_SIZE];
    int size;

    // Read and print the array
    readArray(arr, &size);
    printArray(arr, size);

    // Print negative elements
    printNegativeElements(arr, size);

    // Find second largest number
    findSecondLargest(arr, size);

    // Delete duplicates and print the array again
    deleteDuplicates(arr, &size);
    printArray(arr, size);

    return 0;
}
